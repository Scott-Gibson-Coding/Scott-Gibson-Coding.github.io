/* Starting variables for the site. */
:root {
  /* colors */
  --white: #f9faff;
  --platinum: #e3e4e8;
  --windsurfing: #32779b;
  --marina: #5a91c7;
  --gray: #9a9a9a;
  --onyx: #3c3d44;
  --charcoal: #343c47;
  --ld-bkgd: light-dark(var(--platinum), var(--charcoal));
  --ld-text: light-dark(var(--onyx), var(--white));
  --ld-projects: light-dark(var(--white), #2e313d);
  --ld-blue: light-dark(var(--windsurfing), #6dadd0);
  /* border radius */
  --corners: 24px 0;
  --corners-sm: 10px 0;
  /* font */
  --base-font-size: 1rem;
}

/* Set the box sizing to border-box for layouts. */
html {
  box-sizing: border-box;
  color-scheme: light dark;
}

html:has(#mode-switcher #light:checked) {
  color-scheme: light;
}
html:has(#mode-switcher #dark:checked) {
  color-scheme: dark;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/* Basic page set to our font size and font family. */
body {
  font-size: var(--base-font-size);
  font-family: "Inter", sans-serif;
  background-color: var(--ld-bkgd);
  color: var(--ld-text);
}

/* Main wrapper styling. */
.wrapper {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

/* Header styling. */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

h1 {
  font-size: calc(var(--base-font-size) * 2.9);
}

h2 {
  font-size: calc(var(--base-font-size));
  text-transform: uppercase;
  color: var(--ld-blue);
  letter-spacing: 0.25em;
}

/* Text element styling. */
p {
  line-height: 1.5;
}

a {
  color: var(--ld-blue);
}
a:hover {
  color: var(--marina);
}

/* Make sure images don't exceed the width of the window. */
img {
  max-width: 100%;
  border-radius: var(--corners);
}

/* svg social icon bar */
.icons {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-flow: row wrap;
  align-items: flex-end;
  justify-content: center;
  gap: 2rem;
}

ul svg {
  width: 32px;
  height: 32px;
}

.social {
  fill: var(--ld-blue);
}
.social:hover {
  fill: var(--marina);
}

/* About me layout styling */
.main-article {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  text-align: center;
}

.main-article img {
  margin: 0 auto;
  object-fit: cover;
  object-position: top;
  height: 175px;
  width: 300px;
  overflow: hidden;
}

/* Projects section */

main {
  margin-top: 5rem;
  margin-bottom: 3rem;
  text-align: center;
}

main h2 {
  margin: 1rem 0;
}

.projects {
  display: flex;
  flex-flow: column nowrap;
  gap: 3rem;
}

.project {
  background-color: var(--ld-projects);
  padding: 3rem;
  border-radius: var(--corners);
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
}

.project ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  gap: 1rem;
}

.project li {
  background-color: var(--marina);
  color: var(--white);
  padding: 0.5rem;
  border-radius: var(--corners-sm);
  font-size: calc(var(--base-font-size) * 0.85);
}

.project img {
  grid-row: 1/2;
}

.img-border {
  border: 2px solid var(--onyx);
}

/* Footer styling */

footer {
  text-align: center;
}

footer h2 {
  margin: 2rem 0;
}

.footer-text {
  line-height: 1.5;
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

.footer-text-box ul {
  font-size: calc(var(--base-font-size) * 0.85);
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.footer-text-box li {
  line-height: 2;
}

footer .social {
  fill: var(--ld-text);
}

/* Light/Dark radio switch */

/* 
 * Stolen from a codepen by Scott Ohara 
 * Source: https://codepen.io/scottohara/pen/zLZwNv
 */
@layer switch {
  /* Get rid of the fieldset styling and keep this all on a single line. */
  .radio-switch {
    border: none;
    padding: 0;
    white-space: nowrap;
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }

  /* Radio button groups often benefit from a legend to provide context as to what the different options pertain to. Ideally this would be visible to all users, but you know... */
  .radio-switch legend {
    font-size: 2px;
    opacity: 0;
    position: absolute;
  }

  /* Relative labels to help position the pseudo elements the z-index will be handy later, when the labels that overlap the visual switch UI need to be adjusted to allow for a user to toggle the switch without having to move their mouse/finger to the different sides of the UI. */
  .radio-switch label {
    display: inline-block;
    line-height: 2;
    font-size: 0.9rem;
    position: relative;
    z-index: 2;
  }

  /* Inputs set to opacity 0 are still accessible. Apparently there can be issues targetting inputs with Dragon speech recognition software if you use the typical 'visually-hidden' class...so might as well just avoid that issue... */
  .radio-switch input {
    opacity: 0;
    position: absolute;
  }

  /* A 2 option toggle can only have 2 options...so instead of adding more classes, i'm just going to use some structural pseudo-classes to target them... cause why let all that good work go to waste?!

  The large padding is used to position the labels on top of the visual UI, so the switch UI itself can be mouse clicked or finger tapped to toggle the current option. */
  .radio-switch label:first-of-type {
    padding-right: 5em;
  }

  .radio-switch label:last-child {
    margin-left: -4.25em;
    padding-left: 5em;
  }

  /* Oh focus within, I can't wait for you to have even more support. But you'll never be in IE11, so we're going to need a polyfill for you for a bit... */
  .radio-switch:focus-within label:first-of-type:after {
    box-shadow: 0 0 0 2px var(--white), 0 0 0 4px var(--marina);
  }

  /* making the switch UI  */
  .radio-switch label:first-of-type:before,
  .radio-switch label:first-of-type:after {
    border: 1px solid var(--onyx);
    content: "";
    height: 2em;
    overflow: hidden;
    pointer-events: none;
    position: absolute;
    vertical-align: middle;
  }

  .radio-switch label:first-of-type:before {
    background: var(--white);
    border: 1px solid var(--onyx);
    border-radius: 100%;
    position: absolute;
    right: -0.075em;
    transform: translateX(0em);
    transition: transform 0.2s ease-in-out;
    width: 2em;
    z-index: 2;
  }

  .radio-switch label:first-of-type:after {
    background: #777;
    border-radius: 1em;
    margin: 0 1em;
    transition: background 0.2s ease-in-out;
    width: 4em;
  }

  /* Visually change the switch UI to match the checked state of the first radio button. */
  .radio-switch input:first-of-type:checked ~ label:first-of-type:after {
    background: var(--marina);
  }

  .radio-switch input:first-of-type:checked ~ label:first-of-type:before {
    transform: translateX(-2em);
  }

  /* Move the 2nd label to have a lower z-index, so when that option is toggled, the first label will overlay on top of the Switch ui, and the switch can be pressed again to toggle back to the previous state. */
  .radio-switch input:last-of-type:checked ~ label:last-of-type {
    z-index: 1;
  }
}

/* Tablet/Desktop styling */
@media (min-width: 750px) {
  :root {
    --base-font-size: 1.125rem;
  }

  h1 {
    margin-left: -3px;
  }

  .wrapper {
    padding-block: 2rem;
    padding-inline: 5rem;
  }

  .radio-switch {
    justify-content: flex-end;
  }

  .icons {
    justify-content: flex-start;
  }

  .main-article {
    grid-template-columns: 1fr 1fr;
    align-items: center;
    text-align: left;
  }

  .main-article img {
    width: auto;
    height: auto;
    max-height: 400px;
    margin: 0 0 0 auto;
    object-fit: none;
    object-position: none;
    overflow: auto;
  }

  footer {
    text-align: left;
  }

  .footer-text {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: 850px) {
  .project {
    grid-template-columns: 1fr 1fr;
  }

  .project img {
    grid-row: auto;
  }

  .project ul {
    justify-content: flex-start;
    flex-wrap: nowrap;
  }
}
